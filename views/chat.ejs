<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Chat App</title>
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
			integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ=="
			crossorigin="anonymous"
			referrerpolicy="no-referrer"
		/>
		<link rel="stylesheet" href="style.css" />
	</head>
	<body>
		<section>
			<div class="left">
				<!-- TODO: -->
			</div>
			<div class="right">
				<div class="container">
					<div class="view"></div>
					<div class="input">
						<form>
							<input type="text" placeholder="Type Something...." />
							<button type="submit"><i class="far fa-paper-plane"></i></button>
						</form>
					</div>
				</div>
			</div>
		</section>

		<script src="/socket.io/socket.io.js"></script>
		<script>
			const server = io();
			const submit = document.querySelector('button');
			const form = document.querySelector('form');
			const message = document.querySelector('input');
			const userMessage = document.querySelector('.left-chat');
			const clientMessage = document.querySelector('.right-chat');
			const view = document.querySelector('.view');
			const left = document.querySelector('.left');

			form.addEventListener('submit', (e) => {
				e.preventDefault();
				if (message.value) {
					server.emit('send Message', message.value);
					const rightChat = document.createElement('div');
					rightChat.classList.add('right-chat');
					rightChat.innerHTML = `<p>${message.value}</p>`;
					view.appendChild(rightChat);
					message.value = '';
					view.scrollTop = view.scrollHeight;
				}
			});

			server.on('message', (msg) => {
				const leftChat = document.createElement('div');
				leftChat.classList.add('left-chat');
				leftChat.innerHTML = `<p>${msg}</p>`;
				view.appendChild(leftChat);
				view.scrollTop = view.scrollHeight;
			});

			server.on('new user', (users) => {
				const allusers = document.querySelectorAll('.user-profile');
				allusers.forEach((user) => {
					user.remove();
				});
				users.forEach((user) => {
					const divUser = document.createElement('div');
					divUser.classList.add('user-profile');
					divUser.innerHTML = `<div class="img"></div>
					<div class="name">
						<p>${user.name}</p>
					</div>`;
					divUser.setAttribute('data-id', user.id);
					left.appendChild(divUser);
				});

				// const divUser = document.createElement('div');
				// divUser.classList.add('user-profile');
				// divUser.innerHTML = `<div class="img"></div>
				// 	<div class="name">
				// 		<p>${name.name}</p>
				// 	</div>`;
				// divUser.setAttribute('data-id', name.id);
				// left.appendChild(divUser);
			});

			server.on('disconnected', (id) => {
				const users = document.querySelectorAll('.user-profile');
				users.forEach((user) => {
					if (id === user.dataset.id) {
						console.log('here');
						user.remove();
					}
				});
			});
		</script>
	</body>
</html>
